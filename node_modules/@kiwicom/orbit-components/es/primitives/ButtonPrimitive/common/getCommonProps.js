import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import getSizeToken from "./getSizeToken";
import getPadding from "./getPadding";
import { SIZE_OPTIONS } from "./consts";

var getCommonProps = function getCommonProps(_ref) {
  var width = _ref.width,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? SIZE_OPTIONS.NORMAL : _ref$size,
      theme = _ref.theme,
      iconRight = _ref.iconRight,
      iconLeft = _ref.iconLeft,
      children = _ref.children;
  var onlyIcon = Boolean(iconLeft && !children);
  var hasCenteredContent = Boolean(iconLeft && !children || children && !(iconLeft || iconRight));
  return _objectSpread(_objectSpread({}, getSizeToken(size, theme)), {}, {
    width: width,
    padding: getPadding(onlyIcon, iconRight, iconLeft, size, theme),
    fontWeight: theme.orbit.fontWeightMedium,
    contentAlign: onlyIcon || hasCenteredContent ? "center" : "space-between",
    contentWidth: "100%"
  });
};

export default getCommonProps;