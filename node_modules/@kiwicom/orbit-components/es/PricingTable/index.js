import * as React from "react";
import styled from "styled-components";
import Stack from "../Stack";
import useMediaQuery from "../hooks/useMediaQuery";
import { StyledListWrapper } from "./PricingTableItem";
import PricingTableContext from "./PricingTableContext";
var StyledPricingTable = styled.div.withConfig({
  displayName: "PricingTable__StyledPricingTable",
  componentId: "sc-1aibxyh-0"
})([""]);

var PricingTable = function PricingTable(_ref) {
  var children = _ref.children,
      dataTest = _ref.dataTest,
      activeElement = _ref.activeElement,
      hasError = _ref.hasError,
      desktopRadio = _ref.desktopRadio;

  var _useMediaQuery = useMediaQuery(),
      isDesktop = _useMediaQuery.isDesktop;

  var resolveBasis = function resolveBasis(item) {
    if (item > 0) {
      return "".concat(Math.floor(100 / item), "%");
    }

    return "100%";
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, isDesktop !== null && /*#__PURE__*/React.createElement(StyledPricingTable, {
    "data-test": dataTest
  }, /*#__PURE__*/React.createElement(Stack, {
    flex: true,
    grow: true,
    spaceAfter: "medium",
    spacing: "XSmall",
    align: "stretch",
    desktop: {
      spacing: "medium",
      spaceAfter: "none"
    },
    justify: "center"
  }, /*#__PURE__*/React.createElement(PricingTableContext.Provider, {
    value: {
      basis: !isDesktop ? resolveBasis(React.Children.count(children)) : 0,
      hasError: hasError,
      desktopRadio: desktopRadio
    }
  }, children)), !isDesktop && children && /*#__PURE__*/React.createElement(Stack, {
    spacing: "XSmall"
  }, /*#__PURE__*/React.createElement(StyledListWrapper, null, React.Children.map(children, function (child, i) {
    if (i === activeElement) {
      return /*#__PURE__*/React.createElement(PricingTableContext.Provider, {
        value: {
          isContent: true
        }
      }, child);
    }

    return null;
  })))));
};

export default PricingTable;
export { default as PricingTableItem } from "./PricingTableItem";