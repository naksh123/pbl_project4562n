import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";

var countValues = function countValues(data, _ref, min) {
  var _ref2 = _slicedToArray(_ref, 2),
      from = _ref2[0],
      to = _ref2[1];

  return data.reduce(function (_ref3, curr, index) {
    var _ref4 = _slicedToArray(_ref3, 2),
        selected = _ref4[0],
        totalCount = _ref4[1];

    return [index + min >= from && index + min <= to ? selected + curr : selected, totalCount + curr];
  }, [0, 0]);
};

var calculateCountOf = function calculateCountOf(data, value, min) {
  if (Array.isArray(value)) {
    return countValues(data, [value[0], value[value.length - 1]], min);
  }

  return countValues(data, [min, value], min);
};

export default calculateCountOf;