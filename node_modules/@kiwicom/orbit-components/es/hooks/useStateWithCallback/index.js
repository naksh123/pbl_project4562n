import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useState, useCallback } from "react";
export default function useStateWithCallback(defaultValue, callback) {
  var _useState = useState(defaultValue),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var setStateWithCallback = useCallback(function (value) {
    return setState(function (prevValue) {
      if (value !== prevValue) {
        if (callback) {
          callback(value);
        }
      }

      return value;
    });
  }, [callback]);
  return [state, setStateWithCallback];
}