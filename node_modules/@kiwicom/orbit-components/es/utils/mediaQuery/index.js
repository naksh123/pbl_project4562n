import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { css } from "styled-components";
import { QUERIES } from "./consts";
export var getBreakpointWidth = function getBreakpointWidth(name, theme, pure) {
  var _tokens;

  var tokens = (_tokens = {}, _defineProperty(_tokens, QUERIES.MEDIUMMOBILE, theme.orbit.widthBreakpointMediumMobile), _defineProperty(_tokens, QUERIES.LARGEMOBILE, theme.orbit.widthBreakpointLargeMobile), _defineProperty(_tokens, QUERIES.TABLET, theme.orbit.widthBreakpointTablet), _defineProperty(_tokens, QUERIES.DESKTOP, theme.orbit.widthBreakpointDesktop), _defineProperty(_tokens, QUERIES.LARGEDESKTOP, theme.orbit.widthBreakpointLargeDesktop), _tokens);

  if (pure) {
    return tokens[name];
  }

  return "(min-width: ".concat(tokens[name], "px)");
}; // $FlowFixMe

var mediaQueries = Object.keys(QUERIES).reduce(
/* $FlowFixMe(>=0.115.0) This comment suppresses an error found when upgrading Flow to
 * v0.115.0. To view the error, delete this comment and run Flow. */
function (o, name) {
  return _objectSpread(_objectSpread({}, o), {}, _defineProperty({}, QUERIES[name], function (style) {
    return css(["@media ", "{", ";}"], function (_ref) {
      var theme = _ref.theme;
      return getBreakpointWidth(QUERIES[name], theme);
    }, style);
  }));
}, {});
export default mediaQueries;