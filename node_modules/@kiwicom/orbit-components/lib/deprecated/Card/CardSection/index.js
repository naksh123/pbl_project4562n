"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "CardSectionHeader", {
  enumerable: true,
  get: function get() {
    return _CardSectionHeader.default;
  }
});
Object.defineProperty(exports, "CardSectionContent", {
  enumerable: true,
  get: function get() {
    return _CardSectionContent.default;
  }
});
exports.default = exports.StyledCardSection = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../../../defaultTheme"));

var _mediaQuery = _interopRequireDefault(require("../../../utils/mediaQuery"));

var _CardSectionContext = _interopRequireDefault(require("./CardSectionContext"));

var _ChevronDown = _interopRequireDefault(require("../../../icons/ChevronDown"));

var _Icon = require("../../../Icon");

var _consts = require("../../../Icon/consts");

var _CardSectionHeader = _interopRequireDefault(require("./CardSectionHeader"));

var _CardSectionContent = _interopRequireDefault(require("./CardSectionContent"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var StyledCardSectionIconRight = (0, _styledComponents.default)(_ChevronDown.default).withConfig({
  displayName: "CardSection__StyledCardSectionIconRight",
  componentId: "sc-1bqkvxi-0"
})(["align-self:center;transition:", ";"], function (_ref) {
  var theme = _ref.theme;
  return theme.orbit.durationFast;
}); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198

StyledCardSectionIconRight.defaultProps = {
  theme: _defaultTheme.default
};

var StyledCardSectionContent = _styledComponents.default.div.withConfig({
  displayName: "CardSection__StyledCardSectionContent",
  componentId: "sc-1bqkvxi-1"
})(["font-family:", ";font-size:", ";line-height:", ";color:", ";border-top:", ";padding-top:", ";overflow:hidden;"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.orbit.fontFamily;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.orbit.fontSizeTextNormal;
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.orbit.lineHeightTextNormal;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.orbit.colorTextPrimary;
}, function (_ref6) {
  var theme = _ref6.theme,
      expanded = _ref6.expanded;
  return expanded ? "1px solid ".concat(theme.orbit.paletteCloudNormal) : "0px solid ".concat(theme.orbit.paletteCloudNormal);
}, function (_ref7) {
  var theme = _ref7.theme,
      expanded = _ref7.expanded;
  return expanded && "".concat(theme.orbit.spaceMedium);
}); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledCardSectionContent.defaultProps = {
  theme: _defaultTheme.default
};

var StyledCardSectionHeader = _styledComponents.default.div.withConfig({
  displayName: "CardSection__StyledCardSectionHeader",
  componentId: "sc-1bqkvxi-2"
})(["margin-bottom:", ";display:flex;flex-direction:row;cursor:pointer;position:relative;min-height:", ";"], function (_ref8) {
  var theme = _ref8.theme,
      expanded = _ref8.expanded;
  return expanded && theme.orbit.spaceMedium;
}, function (_ref9) {
  var expandable = _ref9.expandable;
  return expandable && (0, _Icon.getSize)(_consts.ICON_SIZES.MEDIUM);
}); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledCardSectionHeader.defaultProps = {
  theme: _defaultTheme.default
};

var StyledCardSection = _styledComponents.default.div.withConfig({
  displayName: "CardSection__StyledCardSection",
  componentId: "sc-1bqkvxi-3"
})(["width:100%;padding:", ";box-sizing:border-box;position:relative;background:", ";", ""], function (_ref10) {
  var theme = _ref10.theme;
  return theme.orbit.spaceMedium;
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.orbit.backgroundCard;
}, _mediaQuery.default.desktop((0, _styledComponents.css)(["padding:", ";"], function (_ref12) {
  var theme = _ref12.theme;
  return theme.orbit.spaceLarge;
}))); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


exports.StyledCardSection = StyledCardSection;
StyledCardSection.defaultProps = {
  theme: _defaultTheme.default
};

var CardSection = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(CardSection, _React$Component);

  var _super = _createSuper(CardSection);

  function CardSection() {
    var _this;

    (0, _classCallCheck2.default)(this, CardSection);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "injectCallbackAndToggleSection", function () {
      var _this$props = _this.props,
          handleToggleSection = _this$props.handleToggleSection,
          onClose = _this$props.onClose,
          onExpand = _this$props.onExpand,
          expanded = _this$props.expanded;
      handleToggleSection(); // First do toggle

      if (expanded && onClose) {
        // If is expanded -> action is closing
        onClose();
      }

      if (!expanded && onExpand) {
        // if is closed > action is expanding
        onExpand();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleKeyDown", function (ev) {
      if (ev.keyCode === 13 || ev.keyCode === 32) {
        ev.preventDefault();

        _this.injectCallbackAndToggleSection();
      }
    });
    return _this;
  }

  (0, _createClass2.default)(CardSection, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props2 = this.props,
          handleToggleSection = _this$props2.handleToggleSection,
          initialExpanded = _this$props2.initialExpanded,
          setInitialExpandedSection = _this$props2.setInitialExpandedSection;

      if (initialExpanded) {
        handleToggleSection();
        setInitialExpandedSection();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          children = _this$props3.children,
          dataTest = _this$props3.dataTest,
          expandable = _this$props3.expandable,
          expanded = _this$props3.expanded;
      return /*#__PURE__*/React.createElement(StyledCardSection, {
        "data-test": dataTest,
        expandable: expandable,
        expanded: expanded
      }, /*#__PURE__*/React.createElement(_CardSectionContext.default.Provider, {
        value: {
          expandable: expandable,
          expanded: expanded,
          handleToggleSection: this.injectCallbackAndToggleSection,
          onKeyDownHandler: this.handleKeyDown
        }
      }, children));
    }
  }]);
  return CardSection;
}(React.Component);

var _default = CardSection;
exports.default = _default;