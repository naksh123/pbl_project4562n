"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.StyledServiceLogo = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

var _consts = require("./consts");

var getHeight = function getHeight(theme, size) {
  var _height;

  var tokens = {
    height: (_height = {}, (0, _defineProperty2.default)(_height, _consts.SIZE_OPTIONS.SMALL, theme.orbit.heightServiceLogoSmall), (0, _defineProperty2.default)(_height, _consts.SIZE_OPTIONS.MEDIUM, theme.orbit.heightServiceLogoMedium), (0, _defineProperty2.default)(_height, _consts.SIZE_OPTIONS.LARGE, theme.orbit.heightServiceLogoLarge), _height)
  };
  return tokens.height[size];
};

var getColor = function getColor(greyScale) {
  return greyScale ? "logos-grayscale" : "logos";
};

var StyledServiceLogo = (0, _styledComponents.default)(function (_ref) {
  var className = _ref.className,
      name = _ref.name,
      size = _ref.size,
      grayScale = _ref.grayScale,
      theme = _ref.theme,
      dataTest = _ref.dataTest;
  return /*#__PURE__*/React.createElement("img", {
    className: className,
    src: "".concat(_consts.baseURL, "/").concat(getColor(grayScale), "/0x").concat(parseInt(getHeight(theme, size), 10), "/").concat(name, ".png"),
    srcSet: "".concat(_consts.baseURL, "/").concat(getColor(grayScale), "/0x").concat(parseInt(getHeight(theme, size), 10) * 2, "/").concat(name, ".png 2x"),
    alt: name,
    "data-test": dataTest
  });
}).withConfig({
  displayName: "ServiceLogo__StyledServiceLogo",
  componentId: "sc-1ujs7cw-0"
})(["height:", ";width:auto;background-color:transparent;"], function (_ref2) {
  var theme = _ref2.theme,
      size = _ref2.size;
  return getHeight(theme, size);
}); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198

exports.StyledServiceLogo = StyledServiceLogo;
StyledServiceLogo.defaultProps = {
  theme: _defaultTheme.default
};

var ServiceLogo = function ServiceLogo(_ref3) {
  var name = _ref3.name,
      _ref3$size = _ref3.size,
      size = _ref3$size === void 0 ? _consts.SIZE_OPTIONS.MEDIUM : _ref3$size,
      _ref3$grayScale = _ref3.grayScale,
      grayScale = _ref3$grayScale === void 0 ? false : _ref3$grayScale,
      dataTest = _ref3.dataTest;
  return /*#__PURE__*/React.createElement(StyledServiceLogo, {
    name: name,
    size: size,
    grayScale: grayScale,
    dataTest: dataTest
  });
};

var _default = ServiceLogo;
exports.default = _default;