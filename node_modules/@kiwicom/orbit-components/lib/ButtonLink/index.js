"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _consts = require("./consts");

var _ButtonPrimitive = _interopRequireDefault(require("../primitives/ButtonPrimitive"));

var _useTheme = _interopRequireDefault(require("../hooks/useTheme"));

var _getIconContainer = _interopRequireDefault(require("../primitives/ButtonPrimitive/common/getIconContainer"));

var _getButtonLinkStyles = _interopRequireDefault(require("./helpers/getButtonLinkStyles"));

var _getButtonLinkIconForeground = _interopRequireDefault(require("./helpers/getButtonLinkIconForeground"));

var _getButtonLinkCommonProps = _interopRequireDefault(require("./helpers/getButtonLinkCommonProps"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ButtonLink = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$type = _ref.type,
      type = _ref$type === void 0 ? _consts.TYPES.PRIMARY : _ref$type,
      size = _ref.size,
      _ref$compact = _ref.compact,
      compact = _ref$compact === void 0 ? false : _ref$compact,
      props = (0, _objectWithoutProperties2.default)(_ref, ["type", "size", "compact"]);
  var theme = (0, _useTheme.default)();

  var propsWithTheme = _objectSpread({
    theme: theme,
    size: size
  }, props);

  var commonProps = (0, _getButtonLinkCommonProps.default)(_objectSpread(_objectSpread({}, propsWithTheme), {}, {
    compact: compact
  }));
  var buttonLinkStyles = (0, _getButtonLinkStyles.default)({
    type: type,
    theme: theme,
    compact: compact
  });
  var icons = (0, _getIconContainer.default)(_objectSpread(_objectSpread({}, propsWithTheme), {}, {
    iconForeground: (0, _getButtonLinkIconForeground.default)({
      type: type,
      theme: theme,
      compact: compact
    })
  }));
  return /*#__PURE__*/React.createElement(_ButtonPrimitive.default, (0, _extends2.default)({
    ref: ref
  }, props, buttonLinkStyles, commonProps, icons));
});
ButtonLink.displayName = "ButtonLink";
var _default = ButtonLink;
exports.default = _default;