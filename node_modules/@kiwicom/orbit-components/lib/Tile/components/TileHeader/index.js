"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.StyledIconRight = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../../../defaultTheme"));

var _index = require("../../../utils/rtl/index");

var _index2 = _interopRequireDefault(require("../../../Stack/index"));

var _index3 = _interopRequireDefault(require("../../../Heading/index"));

var _ChevronDown = _interopRequireDefault(require("../../../icons/ChevronDown"));

var _NewWindow = _interopRequireDefault(require("../../../icons/NewWindow"));

var _ChevronRight = _interopRequireDefault(require("../../../icons/ChevronRight"));

var _transition = _interopRequireDefault(require("../../../utils/transition"));

var _mediaQuery = _interopRequireDefault(require("../../../utils/mediaQuery"));

var StyledTileHeader = _styledComponents.default.div.withConfig({
  displayName: "TileHeader__StyledTileHeader",
  componentId: "sc-13kgyxb-0"
})(["display:block;width:100%;box-sizing:border-box;cursor:pointer;padding:", ";font-size:", ";line-height:", ";transition:", ";:focus{outline:none;}", ""], function (_ref) {
  var theme = _ref.theme;
  return theme.orbit.spaceMedium;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.orbit.fontSizeTextNormal;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.orbit.lineHeightTextNormal;
}, (0, _transition.default)(["background-color"], "fast", "ease-in-out"), _mediaQuery.default.largeMobile((0, _styledComponents.css)(["padding:", ";"], function (_ref4) {
  var theme = _ref4.theme;
  return theme.orbit.spaceLarge;
}))); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledTileHeader.defaultProps = {
  theme: _defaultTheme.default
};

var StyledTileIcon = _styledComponents.default.div.withConfig({
  displayName: "TileHeader__StyledTileIcon",
  componentId: "sc-13kgyxb-1"
})(["color:", ";flex-shrink:0;align-items:center;align-self:flex-start;margin:", ";"], function (_ref5) {
  var theme = _ref5.theme;
  return theme.orbit.colorIconPrimary;
}, function (_ref6) {
  var theme = _ref6.theme;
  return (0, _index.rtlSpacing)("0 ".concat(theme.orbit.spaceXSmall, " 0 0"));
}); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledTileIcon.defaultProps = {
  theme: _defaultTheme.default
};

var StyledTileTitle = _styledComponents.default.div.withConfig({
  displayName: "TileHeader__StyledTileTitle",
  componentId: "sc-13kgyxb-2"
})(["display:flex;align-items:center;width:100%;"]); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledTileTitle.defaultProps = {
  theme: _defaultTheme.default
};

var StyledTileDescription = _styledComponents.default.div.withConfig({
  displayName: "TileHeader__StyledTileDescription",
  componentId: "sc-13kgyxb-3"
})(["font-family:", ";font-size:", ";color:", ";line-height:", ";-webkit-text-size-adjust:100%;width:100%;", ";"], function (_ref7) {
  var theme = _ref7.theme;
  return theme.orbit.fontFamily;
}, function (_ref8) {
  var theme = _ref8.theme;
  return theme.orbit.fontSizeTextNormal;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.orbit.colorTextPrimary;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.orbit.lineHeightTextNormal;
}, function (_ref11) {
  var hasTitle = _ref11.hasTitle,
      theme = _ref11.theme;
  return hasTitle && (0, _styledComponents.css)(["margin-top:", ";"], theme.orbit.spaceXXSmall);
}); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledTileDescription.defaultProps = {
  theme: _defaultTheme.default
};

var IconRight = function IconRight(_ref12) {
  var external = _ref12.external,
      expandable = _ref12.expandable,
      className = _ref12.className;
  if (expandable) return /*#__PURE__*/React.createElement(_ChevronDown.default, {
    className: className
  });
  if (external) return /*#__PURE__*/React.createElement(_NewWindow.default, {
    className: className
  });
  return /*#__PURE__*/React.createElement(_ChevronRight.default, {
    className: className,
    reverseOnRtl: true
  });
};

var StyledIconRight = (0, _styledComponents.default)(IconRight).withConfig({
  displayName: "TileHeader__StyledIconRight",
  componentId: "sc-13kgyxb-4"
})(["color:", ";margin:", ";transition:", ";", ";"], function (_ref13) {
  var theme = _ref13.theme;
  return theme.orbit.colorIconSecondary;
}, function (_ref14) {
  var theme = _ref14.theme;
  return (0, _index.rtlSpacing)("0 0 0 ".concat(theme.orbit.spaceMedium));
}, (0, _transition.default)(["color", "transform"], "fast", "ease-in-out"), function (_ref15) {
  var expanded = _ref15.expanded;
  return expanded && (0, _styledComponents.css)(["transform:rotate(-180deg);"]);
}); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198

exports.StyledIconRight = StyledIconRight;
StyledIconRight.defaultProps = {
  theme: _defaultTheme.default
};

var TileHeader = function TileHeader(_ref16) {
  var icon = _ref16.icon,
      title = _ref16.title,
      description = _ref16.description,
      expandable = _ref16.expandable,
      expanded = _ref16.expanded,
      external = _ref16.external,
      onClick = _ref16.onClick,
      header = _ref16.header,
      role = _ref16.role,
      ariaExpanded = _ref16.ariaExpanded,
      ariaControls = _ref16.ariaControls,
      id = _ref16.id,
      tabIndex = _ref16.tabIndex,
      onKeyDown = _ref16.onKeyDown,
      noHeaderIcon = _ref16.noHeaderIcon;
  return /*#__PURE__*/React.createElement(StyledTileHeader, {
    onClick: onClick,
    onKeyDown: onKeyDown,
    role: role,
    "aria-expanded": ariaExpanded,
    "aria-controls": ariaControls,
    id: id,
    tabIndex: tabIndex
  }, /*#__PURE__*/React.createElement(_index2.default, {
    align: "center",
    justify: "between",
    shrink: true,
    spacing: "none"
  }, icon && /*#__PURE__*/React.createElement(StyledTileIcon, null, icon), header || (title || description) && /*#__PURE__*/React.createElement(_index2.default, {
    spacing: "none",
    direction: "column",
    shrink: true
  }, title && /*#__PURE__*/React.createElement(StyledTileTitle, null, /*#__PURE__*/React.createElement(_index3.default, {
    type: "title3",
    as: "h3"
  }, title)), description && /*#__PURE__*/React.createElement(StyledTileDescription, {
    hasTitle: !!title
  }, description)), !noHeaderIcon && /*#__PURE__*/React.createElement(StyledIconRight, {
    external: external,
    expandable: expandable,
    expanded: expanded
  })));
};

var _default = TileHeader;
exports.default = _default;