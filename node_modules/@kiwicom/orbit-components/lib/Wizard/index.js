"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "WizardStep", {
  enumerable: true,
  get: function get() {
    return _WizardStep.default;
  }
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var React = _interopRequireWildcard(require("react"));

var _WizardStep = _interopRequireDefault(require("./WizardStep"));

var _WizardContext = require("./WizardContext");

var _Button = _interopRequireDefault(require("../Button"));

var _ButtonLink = _interopRequireDefault(require("../ButtonLink"));

var _Stack = _interopRequireDefault(require("../Stack"));

var _ChevronDown = _interopRequireDefault(require("../icons/ChevronDown"));

var _Portal = _interopRequireDefault(require("../Portal"));

var _Modal = _interopRequireDefault(require("../Modal"));

var _Card = require("../Card");

var _useMediaQuery2 = _interopRequireDefault(require("../hooks/useMediaQuery"));

var _useTheme = _interopRequireDefault(require("../hooks/useTheme"));

var _useTranslate = _interopRequireDefault(require("../hooks/useTranslate"));

var unstyledList = (0, _styledComponents.css)(["list-style-type:none;margin:0;padding:0;"]);

var _StyledDiv = (0, _styledComponents.default)("div").withConfig({
  displayName: "Wizard___StyledDiv",
  componentId: "sc-9hn60i-0"
})(["button{border-radius:0;}"]);

var _StyledSpan = (0, _styledComponents.default)("span").withConfig({
  displayName: "Wizard___StyledSpan",
  componentId: "sc-9hn60i-1"
})(["font-weight:normal;"]);

var _StyledNav = (0, _styledComponents.default)("nav").withConfig({
  displayName: "Wizard___StyledNav",
  componentId: "sc-9hn60i-2"
})(["padding-top:9px;"]);

var _StyledUl = (0, _styledComponents.default)("ul").withConfig({
  displayName: "Wizard___StyledUl",
  componentId: "sc-9hn60i-3"
})(["", ";> * + *{border-top:1px solid ", ";}"], unstyledList, function (p) {
  return p._css;
});

var _StyledUl2 = (0, _styledComponents.default)("ul").withConfig({
  displayName: "Wizard___StyledUl2",
  componentId: "sc-9hn60i-4"
})(["", ";display:flex;li{flex:1 1 0%;}"], unstyledList);

var Wizard = function Wizard(_ref) {
  var _childrenArray$find;

  var dataTest = _ref.dataTest,
      id = _ref.id,
      completedSteps = _ref.completedSteps,
      activeStep = _ref.activeStep,
      children = _ref.children,
      onChangeStep = _ref.onChangeStep;

  var _useMediaQuery = (0, _useMediaQuery2.default)(),
      isLargeMobile = _useMediaQuery.isLargeMobile;

  var theme = (0, _useTheme.default)();

  var _React$useState = React.useState(false),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      open = _React$useState2[0],
      setOpen = _React$useState2[1];

  var toggle = React.useRef(null);
  var translate = (0, _useTranslate.default)();
  var isCompact = !isLargeMobile;
  var childrenArray = React.Children.toArray(children);
  var stepStatuses = childrenArray.map(function (step, index) {
    if (index < completedSteps) return "completed";
    if (index === completedSteps) return "available";
    return "disabled";
  }); // $FlowFixMe: not sure why "props" evaluates to "mixed"

  var activeStepTitle = (_childrenArray$find = childrenArray.find(function (step, index) {
    return index === activeStep;
  })) === null || _childrenArray$find === void 0 ? void 0 : _childrenArray$find.props.title;
  var stepsCount = React.Children.count(children);
  var steps = React.Children.map(children, function (step, index) {
    return /*#__PURE__*/React.createElement(_WizardContext.WizardStepContext.Provider, {
      value: {
        index: index,
        status: stepStatuses[index],
        nextStepStatus: stepStatuses[index + 1],
        isCompact: isCompact,
        isActive: activeStep === index,
        onChangeStep: onChangeStep
      }
    }, step);
  });

  if (isCompact) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_StyledDiv, null, /*#__PURE__*/React.createElement(_ButtonLink.default, {
      ref: toggle,
      dataTest: dataTest,
      ariaControls: id,
      ariaExpanded: open,
      type: "secondary",
      fullWidth: true,
      iconRight: /*#__PURE__*/React.createElement(_ChevronDown.default, null),
      onClick: function onClick() {
        setOpen(true);
      }
    }, /*#__PURE__*/React.createElement(_Stack.default, {
      as: "span",
      inline: true
    }, /*#__PURE__*/React.createElement("b", null, translate("wizard_progress", {
      number: activeStep + 1,
      total: stepsCount
    })), " ", /*#__PURE__*/React.createElement(_StyledSpan, null, activeStepTitle)))), /*#__PURE__*/React.createElement(_Portal.default, null, /*#__PURE__*/React.createElement("div", {
      id: id
    }, open && /*#__PURE__*/React.createElement(_Modal.default, {
      hasCloseButton: false,
      onClose: function onClose() {
        setOpen(false);
      }
    }, /*#__PURE__*/React.createElement(_StyledNav, null, /*#__PURE__*/React.createElement(_StyledUl, {
      _css: theme.orbit.paletteCloudDark
    }, steps, /*#__PURE__*/React.createElement("li", null, /*#__PURE__*/React.createElement(_Card.CardSection, null, /*#__PURE__*/React.createElement(_Button.default, {
      type: "secondary",
      fullWidth: true,
      onClick: function onClick() {
        setOpen(false);
      }
    }, translate("button_close"))))))))));
  }

  return /*#__PURE__*/React.createElement("nav", null, /*#__PURE__*/React.createElement(_StyledUl2, null, steps));
};

var _default = Wizard;
exports.default = _default;