"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.StyledTableCell = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../../defaultTheme"));

var _consts = require("./consts");

var _consts2 = require("../consts");

var _rtl = require("../../utils/rtl");

var StyledTableCell = (0, _styledComponents.default)(function (_ref) {
  var Component = _ref.element,
      children = _ref.children,
      className = _ref.className,
      dataTest = _ref.dataTest,
      scope = _ref.scope;
  return /*#__PURE__*/React.createElement(Component, {
    className: className,
    "data-test": dataTest,
    scope: scope
  }, children);
}).withConfig({
  displayName: "TableCell__StyledTableCell",
  componentId: "sc-1dr7ow2-0"
})(["", ""], function (_ref2) {
  var theme = _ref2.theme,
      whiteSpace = _ref2.whiteSpace,
      verticalAlign = _ref2.verticalAlign,
      align = _ref2.align;
  return (0, _styledComponents.css)(["box-sizing:border-box;font-family:", ";font-size:", ";color:", ";text-align:", ";white-space:", ";vertical-align:", ";"], theme.orbit.fontFamily, theme.orbit.fontSizeTextNormal, theme.orbit.colorInkNormal, (0, _rtl.textAlign)(align), whiteSpace, verticalAlign);
}); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198

exports.StyledTableCell = StyledTableCell;
StyledTableCell.defaultProps = {
  theme: _defaultTheme.default
};

var TableCell = function TableCell(_ref3) {
  var _ref3$align = _ref3.align,
      align = _ref3$align === void 0 ? _consts.ALIGN_OPTIONS.LEFT : _ref3$align,
      scope = _ref3.scope,
      _ref3$as = _ref3.as,
      as = _ref3$as === void 0 ? _consts2.TYPE_AS.TD : _ref3$as,
      verticalAlign = _ref3.verticalAlign,
      whiteSpace = _ref3.whiteSpace,
      dataTest = _ref3.dataTest,
      children = _ref3.children;
  return /*#__PURE__*/React.createElement(StyledTableCell, {
    verticalAlign: verticalAlign,
    whiteSpace: whiteSpace,
    align: align,
    dataTest: dataTest,
    scope: scope,
    element: as
  }, children);
};

var _default = TableCell;
exports.default = _default;