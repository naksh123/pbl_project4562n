"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "AccordionSection", {
  enumerable: true,
  get: function get() {
    return _AccordionSection.default;
  }
});
exports.default = exports.StyledAccordion = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

var _AccordionContext = require("./AccordionContext");

var _getSpacingToken = _interopRequireDefault(require("../common/getSpacingToken"));

var _AccordionSection = _interopRequireDefault(require("./AccordionSection"));

var StyledAccordion = _styledComponents.default.div.withConfig({
  displayName: "Accordion__StyledAccordion",
  componentId: "sc-1b26k48-0"
})(["width:100%;box-sizing:border-box;position:relative;font-family:", ";margin-bottom:", ";"], function (_ref) {
  var theme = _ref.theme;
  return theme.orbit.fontFamily;
}, _getSpacingToken.default); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


exports.StyledAccordion = StyledAccordion;
StyledAccordion.defaultProps = {
  theme: _defaultTheme.default
};

var Accordion = function Accordion(_ref2) {
  var children = _ref2.children,
      dataTest = _ref2.dataTest,
      spaceAfter = _ref2.spaceAfter,
      expandedSection = _ref2.expandedSection,
      loading = _ref2.loading,
      onExpand = _ref2.onExpand;
  return /*#__PURE__*/React.createElement(StyledAccordion, {
    spaceAfter: spaceAfter,
    "data-test": dataTest
  }, children ? React.Children.map(children, function (item) {
    if (!item) return null;
    var id = item.props.id; // Determine if section is expanded

    var isExpanded = expandedSection === id; // Callback with section id
    // onExpand is not required prop to have easier loading use case

    var handleExpand = function handleExpand() {
      return onExpand && onExpand(id);
    };

    return /*#__PURE__*/React.createElement(_AccordionContext.Provider, {
      value: {
        expanded: isExpanded,
        onExpand: handleExpand,
        loading: loading
      }
    }, item);
  }) : null);
};

var _default = Accordion;
exports.default = _default;