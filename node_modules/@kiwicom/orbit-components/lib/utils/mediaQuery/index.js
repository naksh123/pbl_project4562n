"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.getBreakpointWidth = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _styledComponents = require("styled-components");

var _consts = require("./consts");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var getBreakpointWidth = function getBreakpointWidth(name, theme, pure) {
  var _tokens;

  var tokens = (_tokens = {}, (0, _defineProperty2.default)(_tokens, _consts.QUERIES.MEDIUMMOBILE, theme.orbit.widthBreakpointMediumMobile), (0, _defineProperty2.default)(_tokens, _consts.QUERIES.LARGEMOBILE, theme.orbit.widthBreakpointLargeMobile), (0, _defineProperty2.default)(_tokens, _consts.QUERIES.TABLET, theme.orbit.widthBreakpointTablet), (0, _defineProperty2.default)(_tokens, _consts.QUERIES.DESKTOP, theme.orbit.widthBreakpointDesktop), (0, _defineProperty2.default)(_tokens, _consts.QUERIES.LARGEDESKTOP, theme.orbit.widthBreakpointLargeDesktop), _tokens);

  if (pure) {
    return tokens[name];
  }

  return "(min-width: ".concat(tokens[name], "px)");
}; // $FlowFixMe


exports.getBreakpointWidth = getBreakpointWidth;
var mediaQueries = Object.keys(_consts.QUERIES).reduce(
/* $FlowFixMe(>=0.115.0) This comment suppresses an error found when upgrading Flow to
 * v0.115.0. To view the error, delete this comment and run Flow. */
function (o, name) {
  return _objectSpread(_objectSpread({}, o), {}, (0, _defineProperty2.default)({}, _consts.QUERIES[name], function (style) {
    return (0, _styledComponents.css)(["@media ", "{", ";}"], function (_ref) {
      var theme = _ref.theme;
      return getBreakpointWidth(_consts.QUERIES[name], theme);
    }, style);
  }));
}, {});
var _default = mediaQueries;
exports.default = _default;