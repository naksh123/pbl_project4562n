"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  meta: {
    type: "suggestion",
    docs: {
      description: "The aim of this rule is to prevent usage of custom values for font-size, font-family and line-height CSS properties. Only some of design tokens from @kiwicom/orbit-design-tokens should be used as value.",
      category: "Possible Errors",
      recommended: true
    }
  },
  create: context => {
    const ALLOWED_PROPS = ["font-size", "font-family", "line-height"];
    const ALLOWED_VALUES = ["inherit", "initial", "unset"];
    return {
      TemplateElement(node) {
        if (node.value.cooked) {
          var _node$value$cooked;

          const properties = (_node$value$cooked = node.value.cooked) === null || _node$value$cooked === void 0 ? void 0 : _node$value$cooked.replace(/\n/gm, "").trim().split(";").map(v => v.trim()).filter(Boolean).map(p => p.split(":")).filter(([n]) => ALLOWED_PROPS.includes(n));
          properties.forEach(p => {
            if (p[1] && !ALLOWED_VALUES.includes(p[1].trim())) {
              context.report({
                // @ts-expect-error TODO
                node,
                message: "The value ".concat(p[1].trim(), " used for CSS property ").concat(p[0], " should be replaced with an existing design token. Check orbit.kiwi/design-tokens to find which token you might use.")
              });
            }
          });
        }
      }

    };
  }
};
exports.default = _default;