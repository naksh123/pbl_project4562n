{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _splitToWords = _interopRequireDefault(require(\"./splitToWords\"));\n\nvar _insertGap = _interopRequireDefault(require(\"./insertGap\"));\n/*\n  This function is firstly converting \"repeat(3, 1fr) 2fr\" to plain format that is compatible with IE\n  For simplicity, the IE compatible format \"(1fr)[3]\" for repeat is not used\n  Also if gap is defined, it adds gap after each column/row\n */\n\n\nvar compatibleGridTemplate = function compatibleGridTemplate(cells, gap) {\n  var cellsMap = (0, _splitToWords.default)(cells);\n  var plainCells = cellsMap && cellsMap.map(function (item) {\n    if (/repeat\\((.*\\))/g.test(item)) {\n      var values = /repeat\\((\\d+),\\s(.*\\)?)\\)/g.exec(item);\n      return values && Array.apply(void 0, (0, _toConsumableArray2.default)(Array(Number(values[1])))).map(function () {\n        return values[2];\n      }).join(\" \");\n    }\n\n    return item;\n  }).join(\" \");\n\n  if (!gap) {\n    return plainCells;\n  }\n\n  return (0, _insertGap.default)(plainCells, gap);\n};\n\nvar _default = compatibleGridTemplate;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/naksh/OneDrive/Desktop/packing-list/node_modules/@kiwicom/orbit-components/lib/utils/Grid/helpers/compatibleGridTemplate.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","_splitToWords","_insertGap","compatibleGridTemplate","cells","gap","cellsMap","plainCells","map","item","test","values","exec","Array","apply","Number","join","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,mBAAmB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,IAAIO,aAAa,GAAGR,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAA1C;;AAEA,IAAIQ,UAAU,GAAGT,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIS,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,KAAhC,EAAuCC,GAAvC,EAA4C;AACvE,MAAIC,QAAQ,GAAG,CAAC,GAAGL,aAAa,CAACF,OAAlB,EAA2BK,KAA3B,CAAf;AACA,MAAIG,UAAU,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,GAAT,CAAa,UAAUC,IAAV,EAAgB;AACxD,QAAI,kBAAkBC,IAAlB,CAAuBD,IAAvB,CAAJ,EAAkC;AAChC,UAAIE,MAAM,GAAG,6BAA6BC,IAA7B,CAAkCH,IAAlC,CAAb;AACA,aAAOE,MAAM,IAAIE,KAAK,CAACC,KAAN,CAAY,KAAK,CAAjB,EAAoB,CAAC,GAAGd,mBAAmB,CAACD,OAAxB,EAAiCc,KAAK,CAACE,MAAM,CAACJ,MAAM,CAAC,CAAD,CAAP,CAAP,CAAtC,CAApB,EAAgFH,GAAhF,CAAoF,YAAY;AAC/G,eAAOG,MAAM,CAAC,CAAD,CAAb;AACD,OAFgB,EAEdK,IAFc,CAET,GAFS,CAAjB;AAGD;;AAED,WAAOP,IAAP;AACD,GAT4B,EAS1BO,IAT0B,CASrB,GATqB,CAA7B;;AAWA,MAAI,CAACX,GAAL,EAAU;AACR,WAAOE,UAAP;AACD;;AAED,SAAO,CAAC,GAAGL,UAAU,CAACH,OAAf,EAAwBQ,UAAxB,EAAoCF,GAApC,CAAP;AACD,CAlBD;;AAoBA,IAAIY,QAAQ,GAAGd,sBAAf;AACAN,OAAO,CAACE,OAAR,GAAkBkB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _splitToWords = _interopRequireDefault(require(\"./splitToWords\"));\n\nvar _insertGap = _interopRequireDefault(require(\"./insertGap\"));\n\n/*\n  This function is firstly converting \"repeat(3, 1fr) 2fr\" to plain format that is compatible with IE\n  For simplicity, the IE compatible format \"(1fr)[3]\" for repeat is not used\n  Also if gap is defined, it adds gap after each column/row\n */\nvar compatibleGridTemplate = function compatibleGridTemplate(cells, gap) {\n  var cellsMap = (0, _splitToWords.default)(cells);\n  var plainCells = cellsMap && cellsMap.map(function (item) {\n    if (/repeat\\((.*\\))/g.test(item)) {\n      var values = /repeat\\((\\d+),\\s(.*\\)?)\\)/g.exec(item);\n      return values && Array.apply(void 0, (0, _toConsumableArray2.default)(Array(Number(values[1])))).map(function () {\n        return values[2];\n      }).join(\" \");\n    }\n\n    return item;\n  }).join(\" \");\n\n  if (!gap) {\n    return plainCells;\n  }\n\n  return (0, _insertGap.default)(plainCells, gap);\n};\n\nvar _default = compatibleGridTemplate;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}