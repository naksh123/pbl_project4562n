{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar convertHexToRgba = function convertHexToRgba(color, opacity) {\n  var removeHash = color.replace(\"#\", \"\");\n  var hex = removeHash.length === 3 ? removeHash + removeHash : removeHash;\n  var red = parseInt(hex.substring(0, 2), 16);\n  var green = parseInt(hex.substring(2, 4), 16);\n  var blue = parseInt(hex.substring(4, 6), 16);\n  return \"rgba(\".concat(red, \", \").concat(green, \", \").concat(blue, \", \").concat(opacity / 100, \")\");\n};\n\nvar _default = convertHexToRgba;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/naksh/OneDrive/Desktop/packing-list/node_modules/@kiwicom/orbit-design-tokens/lib/convertHexToRgba.js"],"names":["Object","defineProperty","exports","value","default","convertHexToRgba","color","opacity","removeHash","replace","hex","length","red","parseInt","substring","green","blue","concat","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0C;AAC/D,MAAIC,UAAU,GAAGF,KAAK,CAACG,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAjB;AACA,MAAIC,GAAG,GAAGF,UAAU,CAACG,MAAX,KAAsB,CAAtB,GAA0BH,UAAU,GAAGA,UAAvC,GAAoDA,UAA9D;AACA,MAAII,GAAG,GAAGC,QAAQ,CAACH,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAlB;AACA,MAAIC,KAAK,GAAGF,QAAQ,CAACH,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAApB;AACA,MAAIE,IAAI,GAAGH,QAAQ,CAACH,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAnB;AACA,SAAO,QAAQG,MAAR,CAAeL,GAAf,EAAoB,IAApB,EAA0BK,MAA1B,CAAiCF,KAAjC,EAAwC,IAAxC,EAA8CE,MAA9C,CAAqDD,IAArD,EAA2D,IAA3D,EAAiEC,MAAjE,CAAwEV,OAAO,GAAG,GAAlF,EAAuF,GAAvF,CAAP;AACD,CAPD;;AASA,IAAIW,QAAQ,GAAGb,gBAAf;AACAH,OAAO,CAACE,OAAR,GAAkBc,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar convertHexToRgba = function convertHexToRgba(color, opacity) {\n  var removeHash = color.replace(\"#\", \"\");\n  var hex = removeHash.length === 3 ? removeHash + removeHash : removeHash;\n  var red = parseInt(hex.substring(0, 2), 16);\n  var green = parseInt(hex.substring(2, 4), 16);\n  var blue = parseInt(hex.substring(4, 6), 16);\n  return \"rgba(\".concat(red, \", \").concat(green, \", \").concat(blue, \", \").concat(opacity / 100, \")\");\n};\n\nvar _default = convertHexToRgba;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}